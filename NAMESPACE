# Generated by roxygen2: do not edit by hand

export("%>%")
export(CHELSA_prepare)
export(CHELSA_process)
export(CHELSA_project)
export(CLC_process)
export(EASIN_download)
export(EASIN_plot)
export(EASIN_process)
export(EASIN_taxonomy)
export(GBIF_check)
export(GBIF_download)
export(GBIF_process)
export(GBIF_read_chunk)
export(GBIF_species_data)
export(IAS_distribution)
export(IAS_plot)
export(IAS_process)
export(bioreg_process)
export(coda_to_tibble)
export(convergence_Beta_ranges)
export(convergence_alpha)
export(convergence_plot)
export(convergence_plot_all)
export(convergence_rho)
export(eLTER_process)
export(efforts_download)
export(efforts_plot)
export(efforts_process)
export(efforts_request)
export(efforts_split)
export(efforts_summarize)
export(exp_neg_div)
export(fast_pnorm)
export(get_species_name)
export(install_hmsc_windows)
export(mod_CV_fit)
export(mod_CV_prepare)
export(mod_SLURM)
export(mod_SLURM_refit)
export(mod_fit_windows)
export(mod_get_posteriors)
export(mod_heatmap_beta)
export(mod_heatmap_omega)
export(mod_merge_chains)
export(mod_merge_chains_CV)
export(mod_postprocess_1_CPU)
export(mod_postprocess_2_CPU)
export(mod_postprocess_CV_1_CPU)
export(mod_postprocess_CV_2_CPU)
export(mod_prepare_HPC)
export(mod_prepare_TF)
export(mod_prepare_data)
export(mod_summary)
export(plot_evaluation)
export(plot_gelman)
export(plot_gelman_alpha)
export(plot_gelman_beta)
export(plot_gelman_omega)
export(plot_gelman_rho)
export(plot_latent_factor)
export(plot_prediction)
export(predict_hmsc)
export(predict_latent_factor)
export(predict_maps)
export(predict_maps_CV)
export(prepare_knots)
export(railway_intensity)
export(resp_curv_plot_SR)
export(resp_curv_plot_species)
export(resp_curv_plot_species_all)
export(resp_curv_prepare_data)
export(river_length)
export(road_intensity)
export(solve1)
export(solve2)
export(solve2vect)
export(variance_partitioning_compute)
export(variance_partitioning_plot)
importFrom(Rcpp,sourceCpp)
importFrom(magrittr,"%>%")
importFrom(rlang,"%||%")
importFrom(rlang,":=")
importFrom(rlang,.data)
useDynLib(IASDT.R, .registration = TRUE)
useDynLib(IASDT.R, .registration=TRUE)
