% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/General_DetectAlias.R
\name{DetectAlias}
\alias{DetectAlias}
\title{Detect Aliased Variables in a Linear Model}
\usage{
DetectAlias(DT, Verbose = FALSE)
}
\arguments{
\item{DT}{A \verb{data frame} or \code{tibble} containing the variables to be checked
for aliasing.}

\item{Verbose}{A logical value indicating whether to print the aliased
variables found (if any). If \code{TRUE}, aliased variables are printed to the
console. Defaults to \code{FALSE}.}
}
\value{
Returns a character vector of aliased variable names if any are
found; otherwise, returns \code{NULL} invisibly. If \code{Verbose} is \code{TRUE}, the
function will also print a message to the console.
}
\description{
This function identifies aliased (linearly dependent) variables in a linear
model by adding a constant column to the data frame, fitting a linear model,
and then using the alias function to detect aliased variables.
}
\examples{
library("car", warn.conflicts = FALSE, quietly = TRUE, verbose = FALSE)
x1 <- rnorm(100)
x2 <- 2 * x1
x3 <- rnorm(100)
y <- rnorm(100)

model <- lm(y ~ x1 + x2 + x3)
summary(model)

# there are aliased coefficients in the model
try(car::vif(model))

# The function identifies the aliased variables
DetectAlias(DT = cbind.data.frame(x1, x2, x3))

DetectAlias(DT = cbind.data.frame(x1, x2, x3), Verbose = TRUE)

# excluding x2 and refit the model
model <- lm(y ~ x1 + x3)

summary(model)

try(car::vif(model))
}
