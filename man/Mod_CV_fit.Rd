% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Mod_CV_Fit.R
\name{Mod_CV_Fit}
\alias{Mod_CV_Fit}
\title{Prepare Cross-Validated Hmsc Models for HPC Fitting}
\usage{
Mod_CV_Fit(
  Model = NULL,
  ModelData = NULL,
  CVNames = c("CV_SAC", "CV_Dist", "CV_Large"),
  partitions = NULL,
  Path_CV = NULL,
  EnvFile = ".env",
  initPar = NULL,
  JobName = "CV_Models",
  updater = list(Gamma2 = FALSE, GammaEta = FALSE),
  alignPost = TRUE,
  ToJSON = FALSE,
  FromHPC = TRUE,
  PrepSLURM = TRUE,
  MemPerCpu = NULL,
  Time = NULL,
  Path_Hmsc = NULL,
  Precision = 64,
  ...
)
}
\arguments{
\item{Model}{Either a path to a saved model file (character) or an Hmsc model
object. If a path is provided, the model is loaded from the file.}

\item{ModelData}{Character. Path to input data used to fit the model.}

\item{CVNames}{Character vector specifying the name of the column(s) in the
model input data (see \link{Mod_PrepData} and \link{GetCV}) to be
used to cross-validate the models. The function allows the possibility of
using more than one way of assigning grid cells into cross-validation
folders. If multiple names are provided, separate cross-validation models
will be fitted for each column. Currently, there are three cross-validation
strategies, created using the \link{Mod_PrepData}: \code{CV_SAC}, \code{CV_Dist},
and \code{CV_Large} (see \link{GetCV}).}

\item{partitions}{A vector for cross-validation created by
\link[Hmsc:createPartition]{Hmsc::createPartition} or similar. Defaults to \code{NULL}, which means to use
column name(s) provided in the \code{CVNames} argument. If the \code{partitions}
vector
is provided, the label used in the output files will be \code{CV_Custom}.}

\item{Path_CV}{The directory path where cross-validation models and outputs
will be stored. If \code{Model} argument is a character vector, it will be
estimated from the model path. If \code{Model} is an Hmsc model object, it has
to be provided by the user, otherwise the function will give an error.}

\item{EnvFile}{String. Path to read the environment variables. Default value:
\code{.env}.}

\item{initPar}{a named list of parameter values used for initialization of
MCMC states. See \link[Hmsc:computePredictedValues]{Hmsc::computePredictedValues} for more information.
Default: \code{NULL}.}

\item{JobName}{String specifying the name of the submitted job(s) for SLURM.
Default: \code{CV_Models}.}

\item{updater}{a named list, specifying which conditional updaters should be
omitted.  See \link[Hmsc:computePredictedValues]{Hmsc::computePredictedValues} for more information. Defaults
to \code{list(Gamma2 = FALSE, GammaEta = FALSE)} to disable the following
warnings: \verb{setting updater$Gamma2=FALSE due to specified phylogeny matrix}
and \verb{setting updater$GammaEta=FALSE: not implemented for spatial methods 'GPP' and 'NNGP'}.}

\item{alignPost}{boolean flag indicating whether the posterior of each chains
should be aligned. See \link[Hmsc:computePredictedValues]{Hmsc::computePredictedValues} for more information.
Default: \code{TRUE}.}

\item{ToJSON}{Logical indicating whether to convert unfitted models to JSON
before saving to RDS file. Default: \code{FALSE}.}

\item{FromHPC}{Logical. Indicates if the operation is being performed from an
HPC environment. This adjusts file paths accordingly. Default: \code{TRUE}.}

\item{PrepSLURM}{Logical indicating whether to prepare SLURM command files.
If \code{TRUE} (default), the SLURM commands will be saved to disk using the
\link{Mod_SLURM} function.}

\item{MemPerCpu}{String. Memory per CPU allocation for the SLURM job.
Example: \verb{32G} for 32 gigabytes. Defaults to \code{NULL}. If not provided, the
function will throw an error.}

\item{Time}{String. Duration for which the job should run. Example:
\code{01:00:00} for one hour. If not provided, the function will throw an error.}

\item{Path_Hmsc}{String. Path for the Hmsc-HPC.}

\item{Precision}{Integer, either of 32 (default; \verb{--fp 32}) or 64 for the
precision mode used for sampling while fitting \code{Hmsc-HPC} models (\verb{--fp 64} argument). In \code{Hmsc-HPC}, the default value is 64. This is still under
testing.}

\item{...}{Additional arguments passed to the \link{Mod_SLURM} function.}
}
\description{
This function prepares initial cross-validated Hmsc models in R for fitting
by Hmsc-HPC. It includes data preparation, model initialization, and command
generation for running models on HPC.
}
\details{
The function copies part of the \link[Hmsc:computePredictedValues]{Hmsc::computePredictedValues}
function, which currently does not support performing cross-validation
using Hmsc-HPC. Although it is possible to \href{https://github.com/aniskhan25/hmsc-hpc/issues/14}{make some changes} to the
\link[Hmsc:computePredictedValues]{Hmsc::computePredictedValues} to make it possible to use Hmsc-HPC, this
does not help as our intention is to use the Hmsc-HPC using GPU.

The function reads the following environment variables:
\itemize{
\item \strong{\code{DP_R_Path_Python}} for Python path on LUMI.
project on LUMI.
}
}
\author{
Ahmed El-Gabbas
}
