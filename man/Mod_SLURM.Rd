% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Mod_SLURM.R, R/Mod_SLURM_Refit.R
\name{Mod_SLURM}
\alias{Mod_SLURM}
\alias{Mod_SLURM_Refit}
\title{Prepare SLURM scripts for Hmsc-HPC model fitting}
\usage{
Mod_SLURM(
  ModelDir = NULL,
  JobName = NULL,
  CatJobInfo = TRUE,
  ntasks = 1L,
  CpusPerTask = 1L,
  GpusPerNode = 1L,
  MemPerCpu = NULL,
  Time = NULL,
  Partition = "small-g",
  EnvFile = ".env",
  FromHPC = TRUE,
  Path_Hmsc = NULL,
  Command_Prefix = "Commands2Fit",
  SLURM_Prefix = "Bash_Fit",
  Path_SLURM_Out = NULL
)

Mod_SLURM_Refit(
  ModelDir = NULL,
  NumArrayJobs = 210L,
  JobName = NULL,
  MemPerCpu = NULL,
  Time = NULL,
  Partition = "small-g",
  EnvFile = ".env",
  CatJobInfo = TRUE,
  ntasks = 1L,
  CpusPerTask = 1L,
  GpusPerNode = 1L,
  FromHPC = TRUE,
  PrepSLURM = TRUE,
  Path_Hmsc = NULL,
  Refit_Prefix = "Commands2Refit",
  SLURM_Prefix = "Bash_Refit"
)
}
\arguments{
\item{ModelDir}{Character. Path to the directory containing the models.}

\item{JobName}{Character. Name of the submitted job(s).}

\item{CatJobInfo}{Logical. If \code{TRUE}, additional bash commands are included
to print job-related information. Default: \code{TRUE}.}

\item{ntasks}{Integer. Number of tasks to allocate for the job (\verb{#SBATCH --ntasks}). Default: 1.}

\item{CpusPerTask}{Integer. Number of CPU cores allocated per task (\verb{#SBATCH --cpus-per-task}). Default: 1.}

\item{GpusPerNode}{Integer. Number of GPUs requested per node (\verb{#SBATCH --gpus-per-node}). Default: 1.}

\item{MemPerCpu}{Character. Memory allocation per CPU core. Example: "32G"
for 32 gigabytes. Required --- if not provided, the function throws an
error.}

\item{Time}{Character. Maximum allowed runtime for the job. Example:
"01:00:00" for one hour. Required --- if not provided, the function throws
an error.}

\item{Partition}{Character. Name of the SLURM partition to submit the job to.
Default: "small-g", for running the array jobs on the GPU.}

\item{EnvFile}{Character. Path to the environment file containing paths to
data sources. Defaults to \code{.env}.}

\item{FromHPC}{Logical. Whether the processing is being done on an
High-Performance Computing (HPC) environment, to adjust file paths
accordingly. Default: \code{TRUE}.}

\item{Path_Hmsc}{Character. Path to the Hmsc-HPC installation.}

\item{Command_Prefix}{Character.Prefix for the bash commands used in job
execution. Default: "\code{Commands2Fit}".}

\item{SLURM_Prefix}{Character. Prefix for the generated SLURM script
filenames.}

\item{Path_SLURM_Out}{Character. Directory where SLURM script(s) will be
saved. If \code{NULL} (default), the function derives the path from \code{ModelDir}.}

\item{NumArrayJobs}{Integer. Number of jobs per SLURM script file. In LUMI
HPC, there is a limit of 210 submitted jobs per user for the \code{small-g}
partition. This argument is used to split the jobs into multiple SLURM
scripts if needed. Default: 210. See \href{https://docs.lumi-supercomputer.eu/runjobs/scheduled-jobs/partitions}{LUMI documentation}
for more details.}

\item{PrepSLURM}{Logical. Whether to prepare SLURM command files. If \code{TRUE}
(default), the SLURM commands will be saved to disk using the \link{Mod_SLURM}
function.}

\item{Refit_Prefix}{Character. Prefix for files containing commands to refit
failed or incomplete models.}
}
\value{
This function does not return a value. Instead, it generates and
writes SLURM script files to disk for model fitting and refitting.
}
\description{
The \code{Mod_SLURM} function generates SLURM job submission scripts for fitting
Hmsc-HPC models in an HPC environment. Additionally, \code{Mod_SLURM_Refit}
creates SLURM scripts for refitting models that failed or were not previously
fitted.
}
\author{
Ahmed El-Gabbas
}
