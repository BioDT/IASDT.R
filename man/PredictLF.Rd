% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Mod_predictLF.R
\name{predictLF}
\alias{predictLF}
\title{predictLF}
\usage{
predictLF(
  unitsPred,
  modelunits,
  postEta,
  postAlpha,
  rL,
  NCores = 8,
  Temp_Dir = "TEMP2Pred",
  Model_Name = NULL,
  UseTF = TRUE,
  TF_Environ = NULL,
  TF_use_single = FALSE,
  LF_OutFile = NULL,
  LF_Return = TRUE,
  Verbose = TRUE
)
}
\arguments{
\item{unitsPred}{a factor vector with random level units for which
predictions are to be made}

\item{modelunits}{a factor vector with random level units that are
conditioned on}

\item{postEta}{a list containing samples of random factors at conditioned
units}

\item{postAlpha}{a list containing samples of range (lengthscale) parameters
for latent factors}

\item{rL}{a HmscRandomLevel-class object that describes the random level
structure}

\item{NCores}{Integer specifying the number of cores to use for parallel
processing. Defaults to 8.}

\item{Temp_Dir}{Character string specifying the path for temporary storage of
intermediate files.}

\item{Model_Name}{Character string used as a prefix for temporary file names.
Defaults to NULL, in which case no prefix is used.}

\item{UseTF}{Logical indicating whether to use TensorFlow for calculations.
Defaults to TRUE.}

\item{TF_Environ}{Character string specifying the path to the Python
environment. Defaults to NULL. This argument is required if \code{UseTF} is
TRUE.}

\item{TF_use_single}{Logical indicating whether to use single precision for the
TF calculations. Defaults to \code{FALSE}.}

\item{LF_OutFile}{Character string specifying the path to save the outputs.
If \code{NULL} (default), the predicted latent factors are not saved to a
file. This should end with either \code{qs} or \code{RData}.}

\item{LF_Return}{Logical. Indicates if the output should be
returned. Defaults to \code{TRUE}. If \code{LF_OutFile} is \code{NULL}, this parameter
cannot be set to \code{FALSE} because the function needs to return the result if
it is not saved to a file.}

\item{Verbose}{Logical. If TRUE, detailed output is printed. Default is
\code{FALSE}.}
}
\description{
Draws samples from the conditional predictive distribution of latent factors.
#' This function is optimized for speed using parallel processing and
optionally TensorFlow for matrix operations. This function is adapted from
\link[Hmsc:predictLatentFactor]{Hmsc::predictLatentFactor} with equivalent results to the original function
when \code{predictMean = TRUE}.
}
\details{
The function is expected to be faster than the original function in
the \code{Hmsc} package, especially when using TensorFlow for calculations and
when working on parallel.

The main difference is that this function:
\itemize{
\item allow for parallel processing (\code{NCores} argument);
\item it is possible to use TensorFlow (\code{UseTF} argument) to make matrix
calculations faster, particularly when used on GPU. The following modules
are needed: \code{numpy}, \code{os}, \code{tensorflow}, \code{rdata}, \code{xarray}, and \code{pandas}.
To use \code{TensorFlow}, the argument \code{TF_Environ} should be set to the path of a
Python environment with TensorFlow installed;
\item if \code{UseTF} is set to \code{FALSE}, the function uses R / CPP code in the
calculations;
\item the input \code{postEta} can be either a list or a file path for it, which can
save memory, particularly when working on parallel. The function splits the
\code{postEta} into smaller chunks, each for a combination of alpha value and
latent factor and loop over them on parallel.
\item calculates \code{D11} and \code{D12} matrices only once and save them to disk and
call them when needed.
}
}
\seealso{
\link[Hmsc:predictLatentFactor]{Hmsc::predictLatentFactor}
}
\author{
This script was adapted from the \link[Hmsc:predictLatentFactor]{Hmsc::predictLatentFactor} function
in the \code{Hmsc} package.
}
