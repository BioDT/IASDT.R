% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/general_set_parallel.R
\name{set_parallel}
\alias{set_parallel}
\title{Set up or stop parallel processing plan}
\usage{
set_parallel(
  n_cores = 1L,
  strategy = "future::multisession",
  stop = FALSE,
  show_log = TRUE,
  future_max_size = 8L,
  ...
)
}
\arguments{
\item{n_cores}{Integer. Number of cores to use. If \code{NULL}, defaults to
sequential mode. Default is \code{1}.}

\item{strategy}{Character. The parallel processing strategy to use. Valid
options are \code{future::sequential} (sequential), \code{future::multisession}
(default), \code{future::multicore} (not supported on Windows), and
\code{future::cluster}. If \code{strategy} is not one of the valid options or if
\code{future::multicore} on Windows PC, it defaults to \code{future::multisession}.
See \code{future::plan()} for more details.}

\item{stop}{Logical. If \code{TRUE}, stops any parallel cluster and resets to
sequential mode. If \code{FALSE} (default), sets up a new plan.}

\item{show_log}{Logical. If \code{TRUE} (default), logs messages via
\code{\link[=cat_time]{cat_time()}}.}

\item{future_max_size}{Numeric. Maximum allowed total size (in megabytes) of
global variables identified. See \code{future.globals.maxSize} argument of
\link[future:future.options]{future::future.options} for more details. Default is \code{8}.}

\item{...}{Additional arguments to pass to \link{cat_time}.}
}
\description{
Configures parallel processing with \code{future::plan()} or stops an existing
plan. When stopping, it resets to sequential mode.
}
\examples{
# Prepare working on parallel
IASDT.R::set_parallel(n_cores = 2)
future::plan()

# ---------------------------------------------

# Stopping parallel processing
IASDT.R::set_parallel(stop = TRUE)
future::plan()

# ---------------------------------------------

# Prepare working on parallel using `future::cluster`
IASDT.R::set_parallel(n_cores = 2, strategy = "future::cluster")
future::plan()

# Stopping parallel processing
IASDT.R::set_parallel(stop = TRUE)
future::plan()
}
\author{
Ahmed El-Gabbas
}
