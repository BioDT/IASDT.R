% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{cpp_functions}
\alias{cpp_functions}
\alias{solve1}
\alias{solve2}
\alias{solve2vect}
\alias{fast_pnorm}
\alias{exp_neg_div}
\title{helper C++ functions for fast matrix computations}
\usage{
solve1(x)

solve2(A, B)

solve2vect(A, B)

fast_pnorm(x)

exp_neg_div(A, x)
}
\arguments{
\item{x}{A numeric matrix, numeric vector, or numeric scalar (depending on the function).}

\item{A}{A numeric matrix (for solving, exponential operations, etc.).}

\item{B}{A numeric matrix or vector (right-hand side for solving linear systems).}
}
\value{
\itemize{
\item \code{solve1()}: A numeric matrix, the inverse of \code{x}.
\item \code{solve2()}: A numeric matrix, the solution to \code{A * X = B}.
\item \code{solve2vect()}: A numeric vector, the solution to \code{A * x = B}.
\item \code{fast_pnorm()}: A numeric vector, CDF values approximated for standard normal distribution.
\item \code{exp_neg_div()}: A numeric matrix, elementwise exponential of \code{-A/x}.
}
}
\description{
A collection of efficient C++ functions using RcppArmadillo for common matrix operations, including solving linear systems, computing matrix inverses, approximating normal CDFs, and fast elementwise transformations.
}
\examples{

# -----------------------------------------
# Example for solve1
# -----------------------------------------

N <- 100
set.seed(1000)
Matrix <- matrix(rnorm(N * N), N, N)
all.equal(solve(Matrix), IASDT.R::solve1(Matrix))

# -----------------------------------------
# Example for solve2
# -----------------------------------------

N <- 100
set.seed(1000)
A <- matrix(rnorm(N * N), N, N)
set.seed(2000)
B <- matrix(rnorm(N * N), N, N)
all.equal(solve(A, B), IASDT.R::solve2(A, B))

set.seed(2000)
B <- matrix(rnorm(N), N, 1)
all.equal(solve(A, B), IASDT.R::solve2(A, B))

# -----------------------------------------
# Example for solve2vect
# -----------------------------------------

N <- 100
set.seed(1000)
A <- matrix(rnorm(N * N), N, N)
set.seed(2000)
B <- rnorm(N)
all.equal(solve(A, B), as.vector(IASDT.R::solve2vect(A, B)))

# -----------------------------------------
# Example for fast_pnorm
# -----------------------------------------

set.seed(1000)
A <- rnorm(100)
all.equal(pnorm(A), IASDT.R::fast_pnorm(A))

# -----------------------------------------
# Example for exp_neg_div
# -----------------------------------------

N <- 1000
set.seed(1000)
A <- matrix(rnorm(N * N), N, N)
set.seed(2000)
x <- rnorm(1)
all.equal(exp(-A / x), IASDT.R::exp_neg_div(A, x))
}
\author{
Ahmed El-Gabbas
}
